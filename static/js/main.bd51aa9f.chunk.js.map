{"version":3,"sources":["utils/activeClass.ts","App.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PesonTableRow.tsx","components/PeoplePage.tsx","utils/peopleWithParents.ts","Root.tsx","index.tsx"],"names":["activeClass","isActive","classNames","App","className","role","to","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","name","PersonTableRow","personSlug","useParams","born","died","mother","motherName","father","fatherName","PeoplePage","useState","people","setPeople","isLoading","setIsLoading","isError","setIsError","useEffect","catch","finally","preparedPeople","useMemo","map","find","per","peopleWithParents","length","Root","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.bd51aa9f.chunk.js","sourcesContent":["import classNames from 'classnames';\n\nexport const activeClass = ({ isActive }: { isActive: boolean }) => {\n  return classNames('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  });\n};\n","import { NavLink, Outlet } from 'react-router-dom';\nimport './App.scss';\nimport React from 'react';\nimport { activeClass } from './utils/activeClass';\n\nexport const App: React.FC = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={activeClass}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={activeClass}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={classNames({\n        'has-text-danger': person.sex === 'f',\n      })}\n    >\n      {person.name || '-'}\n    </Link>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonTableRow: React.FC<Props> = ({ person }) => {\n  const { personSlug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': personSlug === person.slug,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {person.mother\n          ? <PersonLink person={person.mother} />\n          : person.motherName || '-'}\n      </td>\n      <td>\n        {person.father\n          ? <PersonLink person={person.father} />\n          : person.fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { peopleWithParents } from '../utils/peopleWithParents';\nimport { Loader } from './Loader/Loader';\nimport { PersonTableRow } from './PesonTableRow';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[] | []>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setIsError(false);\n\n    getPeople()\n      .then(setPeople)\n      .catch(() => {\n        setIsError(true);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const preparedPeople = useMemo(() => {\n    return peopleWithParents(people);\n  }, [people]);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {(!isError && !isLoading && people.length === 0) && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {(!isError && !isLoading) && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {preparedPeople.map(person => (\n                  <PersonTableRow\n                    key={person.slug}\n                    person={person}\n                  />\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n\n  );\n};\n","import { Person } from '../types';\n\nexport const peopleWithParents = (people: Person[]) => {\n  return people.map(person => {\n    const mother = people.find(per => per.name === person.motherName) || null;\n    const father = people.find(per => per.name === person.fatherName) || null;\n\n    return {\n      ...person,\n      mother,\n      father,\n    };\n  });\n};\n","import {\n  HashRouter as Router,\n  Route,\n  Routes,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n        <Route index element={<h1 className=\"title\">Home Page</h1>} />\n        <Route path=\"people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":personSlug\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}